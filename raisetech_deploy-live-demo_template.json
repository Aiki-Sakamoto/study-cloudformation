{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc001cb30c148fea2c7": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-deploy-live-demo"
          }
        ]
      }
    },
    "subnet04e0bc24795b2ee8a": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "AvailabilityZone": "ap-northeast-1c",
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "プライベートサブネット1c"
          }
        ]
      }
    },
    "subnet07fe47072981473fd": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "ap-northeast-1a",
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "プライベートサブネット1a"
          }
        ]
      }
    },
    "subnet0f9be3a04c782f494": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "ap-northeast-1c",
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "パブリックサブネット1c"
          }
        ]
      }
    },
    "subnet0e7a6bab84fabe653": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "ap-northeast-1a",
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "パブリックサブネット1a"
          }
        ]
      }
    },
    "igw06401f11d364099a5": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt9db8e0fa": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ap-northeast-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl060aba730d0a4e75c": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        }
      }
    },
    "rtb0e401088136bbc8b1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        }
      }
    },
    "rtb0928aa0ffc7fd75bf": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        }
      }
    },
    "instancei080775497b681db0d": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0cd744adeca97abb1",
        "InstanceType": "t2.micro",
        "KeyName": "aiki_sakamoto",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-deploy-live-demo-ec2-ubuntu-1a"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0e7a6bab84fabe653"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.0.158",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgawsdeploydemolivedemosgpublic1a"
              }
            ]
          }
        ]
      }
    },
    "rdsawsdeploylivedemodb2": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "20",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t2.micro",
        "Port": "5432",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "7",
        "MasterUsername": "postgres",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "17:40-18:10",
        "PreferredMaintenanceWindow": "mon:14:44-mon:15:14",
        "DBName": "MyDatabase",
        "Engine": "postgres",
        "EngineVersion": "10.10",
        "LicenseModel": "postgresql-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetawsdeploylivedemosubnetgroup"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgawspeploylivedemordssg"
          }
        ]
      }
    },
    "dbsubnetawsdeploylivedemosubnetgroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "aws-deploy-live-demo-subnet-group",
        "SubnetIds": [
          {
            "Ref": "subnet07fe47072981473fd"
          },
          {
            "Ref": "subnet04e0bc24795b2ee8a"
          }
        ]
      }
    },
    "sgawspeploylivedemordssg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-peploy-live-demo-rds-sg",
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        }
      }
    },
    "sgawsdeploydemolivedemosgpublic1a": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-deploy-demo-live-demo-sg-public-1a",
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        }
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl060aba730d0a4e75c"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl060aba730d0a4e75c"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl060aba730d0a4e75c"
        },
        "SubnetId": {
          "Ref": "subnet0f9be3a04c782f494"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl060aba730d0a4e75c"
        },
        "SubnetId": {
          "Ref": "subnet04e0bc24795b2ee8a"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl060aba730d0a4e75c"
        },
        "SubnetId": {
          "Ref": "subnet07fe47072981473fd"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl060aba730d0a4e75c"
        },
        "SubnetId": {
          "Ref": "subnet0e7a6bab84fabe653"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        },
        "InternetGatewayId": {
          "Ref": "igw06401f11d364099a5"
        }
      }
    },
    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb0e401088136bbc8b1"
        },
        "SubnetId": {
          "Ref": "subnet0e7a6bab84fabe653"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb0e401088136bbc8b1"
        },
        "GatewayId": {
          "Ref": "igw06401f11d364099a5"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc001cb30c148fea2c7"
        },
        "DhcpOptionsId": {
          "Ref": "dopt9db8e0fa"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawspeploylivedemordssg"
        },
        "IpProtocol": "tcp",
        "FromPort": "5432",
        "ToPort": "5432",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawspeploylivedemordssg"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawsdeploydemolivedemosgpublic1a"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawsdeploydemolivedemosgpublic1a"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawsdeploydemolivedemosgpublic1a"
        },
        "IpProtocol": "tcp",
        "FromPort": "3000",
        "ToPort": "3000",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawsdeploydemolivedemosgpublic1a"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawspeploylivedemordssg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgawsdeploydemolivedemosgpublic1a"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "RaiseTech deploy-live-demo cloudformation template"
}